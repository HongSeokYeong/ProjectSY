// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "NativeGameplayTags.h"

namespace SYGameplayTags
{
	// 입력 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_EquipAxe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_UnequipAxe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Roll);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SwitchTarget);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Light);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Heavy);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_PickUp_Stones);

	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Block);

	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_TargetLock);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_Rage);
	
	// 능력 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Equip_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Unequip_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Roll);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Block);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_TargetLock);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Rage);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_light);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Heavy);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_PickUp_Stones);

	// 쿨다운 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Light);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Heavy);

	// 플레이어 아이템 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Axe);

	// 이벤트 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Equip_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Unequip_Axe);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SuccessfulBlock);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Left);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Right);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ActivateRage);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_AOE);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ConsumeStones);

	// 상태 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_JumpToFinisher);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rolling);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Blocking);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_TargetLock);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Activating);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Active);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Full);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_None);

	// 값 세팅 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Light);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Heavy);

	// 적 능력 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Melee);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Ranged);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SummonEnemies);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SpawnStone);

	// 적 무기 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Weapon);

	// 적 이벤트 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SummonEnemies);

	// 적 상태 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Strafing);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_UnderAttack);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Unbloackable);

	// 공유 이벤트 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_MeleeHit);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_SpawnProjectile);

	// 공유 능력 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_HitReact);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Death);

	// 공유 셋 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);

	// 공유 상태 태그
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dead);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Front);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Left);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Right);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Back);
	PROJECTSY_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Invincible);
}